/*
 * bibliotecaArrayPassenger.h
 *
 *  Created on: 13 may 2022
 *      Author: ludmi
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "UTNBibliotecaTomaDeDatos.h"
#include "bibliotecaArrayPassenger.h"



/** \brief add in a existing list of passengers the values received as parameters
* in the first empty position
* \param list passenger*
* \param len int
* \param id int
* \param name[] char
* \param lastName[] char
* \param price float
* \param typePassenger int
* \param flycode[] char
* \return int Return (-1) if Error [Invalid length or NULL pointer or without
free space] - (0) if Ok*/


int addPassenger(Passenger* list, int len, int id, char name[] , char lastName[],float price,int typePassenger, char flycode[]){
	int retorno;
	Passenger bufferPassenger;
	retorno =-1;
	int i;

	if(list!=NULL  && len >0 && id>0 && name !=0 && lastName !=0 && price > 0 && typePassenger >0 && flycode!=0){

		bufferPassenger.id = id;
		bufferPassenger.isEmpty = 0;
		list[i] = bufferPassenger;
		(id)++;
		retorno = 0;
		printf("Los datos se cargaron exitosamente");

	 }else{printf("No se pudo cargar los datos");}


return retorno;
}

/** \brief find a Passenger by Id en returns the index position in array.
*
* \param list Passenger*
* \param len int
* \param id int
* \return Return passenger index position or (-1) if [Invalid length or
NULL pointer received or passenger not found]
*
*/
int findPassengerById(Passenger* list, int len,int id)
{
	int retorno;
	retorno = -1;

	if(list !=NULL && len >0 && id >0){
		for (int i = 0; i < len; i++) {
			if (list[i].id == id && list[i].isEmpty == 0) {
							retorno = i;
							break;
		    }
	     }

	   }
	return retorno;
}


/** \brief Remove a Passenger by Id (put isEmpty Flag in 1)
*
* \param list Passenger*
* \param len int
* \param id int
* \return int Return (-1) if Error [Invalid length or NULL pointer or if can't
find a passenger] - (0) if Ok
*
*/
int removePassenger(Passenger* list, int len, int id)
{
	int retorno = -1;
		int index;
		if (list != NULL && len > 0 && id > 0) {
			index =  findPassengerById( list, len, id);
			if (index != -1) {

				list[index].isEmpty = 1;
				retorno = 0;
			}
		}
	return retorno;

}







