/*
 * bibliotecaArrayPassenger.h
 *
 *  Created on: 13 may 2022
 *      Author: ludmi
 */
#include <stdio.h>
#include <stdlib.h>
#include "UTNBibliotecaTomaDeDatos.h"
#include "bibliotecaArrayPassenger.h"

/** \brief To indicate that all position in the array are empty,
* this function put the flag (isEmpty) in TRUE in all
* position of the array
* \param list Passenger* Pointer to array of passenger
* \param len int Array length
* \return int Return (-1) if Error [Invalid length or NULL pointer] - (0) if Ok
*
*/

int initPassengers(Passenger* list, int len)
{
	int respuesta = -1;
	int i;
	if(list != NULL &&  len > 0)
	{
		respuesta = 0;
		for(i=0;i< len;i++)
		{
			list[i].isEmpty = 1;
		}
	}
	return respuesta;
}

/** \brief add in a existing list of passengers the values received as parameters
* in the first empty position
* \param list passenger*
* \param len int
* \param id int
* \param name[] char
* \param lastName[] char
* \param price float
* \param typePassenger int
* \param flycode[] char
* \return int Return (-1) if Error [Invalid length or NULL pointer or without
free space] - (0) if Ok*/
int addPassenger(Passenger* list, int len, int id, char *name[],char lastName[],float price,int typePassenger, char flycode[]);
{
	int retorno;
	Passenger bufferPassenger;
	retorno =-1;
	int i;

	if(list!=NULL  && len >0 && id>0 && name !=0 && lastName !=0 && price > 0 && typePassenger >0 && flycode!=0){

		bufferPassenger.id = id;
		bufferPassenger.isEmpty = 0;
		list[i] = bufferPassenger;
		(id)++;
		retorno = 0;
		printf("Los datos se cargaron exitosamente");

	 }else{printf("No se pudo cargar los datos");}


return retorno;
}

